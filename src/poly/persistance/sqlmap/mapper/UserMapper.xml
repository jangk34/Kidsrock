<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.UserMapper">

	<!-- 회원 가입 -->
	<insert id="insertUser" parameterType="UserDTO">
		INSERT INTO USER_INFO
		(
		EMAIL,
		PASSWORD,
		GENDER,
	    NAME,
		USERTEL,
		POSTADDR,
		ADDR1,
		ADDR2,
		REGDATE,
		REGNO,
		UPDDATE,
		UPDNO
		)
		VALUES
		(
		#{email},
		#{password},
		#{gender},
		#{name},
		#{userTel},
		#{postAddr},
		#{addr1},
		#{addr2},
		now(),
		0,
		now(),
		0
		)
		<selectKey  resultType="string" keyProperty="userNo" order="AFTER" >
			SELECT last_insert_id() FROM DUAL;
		</selectKey>
	</insert>
	<!--회원 가입 시 regNo넣기  -->
	<update id="updateUserRegNo" parameterType="UserDTO" >
	UPDATE USER_INFO 
	SET REGNO=#{regNo}
	WHERE USERNO = #{regNo}
	
	</update>	
	
	<!-- 회원목록 -->
	<select id="getUserList" resultType="UserDTO">
	SELECT USER_NO,
		EMAIL,
		PASSWORD,
		GENDER,
		NAME,
		POSTADDR,
		ADDR1,
		ADDR2,
		REGDATE,
		REGNO,
		UPDDATE,
		UPDNO,
		USERTEL
	FROM USER_INFO
	</select>
	
	<!-- 회원상세 -->
	<select id="getUserDetail" parameterType="string" resultType="UserDTO"><!--  객체가 넘어오느냐 스트링이 넘어오느냐 판단뒤 객체는 객체안에 멤버변수  넘겨오는거에따라  적으면됨 #{ } -->
	SELECT USERNO,
		EMAIL,
		PASSWORD,
		GENDER,
		NAME,
		USERTEL,
		POSTADDR,
		ADDR1,
		ADDR2,
		REGDATE,
		REGNO,
		UPDDATE,
		UPDNO
		
	FROM USER_INFO
	WHERE USERNO=#{userNo}  
	</select>
	<!--  이메일중복체크 -->
	<select id="getUserEmailCheck" parameterType="string" resultType="int">
	SELECT COUNT(*)
	FROM USER_INFO
	WHERE EMAIL=#{email}
	</select>
	
	<!--  회원삭제 -->
	<delete id="deleteUser" parameterType="string">
	DELETE FROM USER_INFO
	WHERE USERNO=#{userNo}
	</delete>
	<!-- 회원로그인  조건은 이메일과 패스워드가 일치-->
	<select id="getUserLogin" parameterType="UserDTO" resultType="UserDTO">
	SELECT USERNO,
	EMAIL,
	PASSWORD,
	GENDER,
	USERTEL,
	NAME,
	POSTADDR,
	ADDR1,
	ADDR2,
	REGDATE,
	REGNO,
	UPDDATE,
	UPDNO,
	USERTEL
	FROM USER_INFO
	WHERE EMAIL=#{email} AND PASSWORD=#{password}
	</select>
	<!--  아이디 찾기 -->
	<select id ="getEmailFind" parameterType="UserDTO" resultType="UserDTO">
	SELECT EMAIL,NAME
	FROM USER_INFO
	WHERE NAME=#{name} AND BIRTH=#{birth} AND GENDER=#{gender} AND USERTEL=#{userTel}
	</select>

	
	<!--  임시비밀번호 -->
	<update id="updateTmpPass" parameterType="UserDTO">
	UPDATE
		USER_INFO
	SET
		PASSWORD = #{password}
	WHERE
		EMAIL=#{email} AND NAME=#{name}
 	</update>
 	
 	<!-- ㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇ유라 -->
 	
	
	
	<update id="updateUser" parameterType="UserDTO">
	UPDATE USER_INFO
	SET EMAIL=#{email},
		NAME=#{name},
		USERTEL=#{userTel},
		POSTADDR=#{postAddr},
		ADDR1=#{addr1},
		ADDR2=#{addr2}
	WHERE USERNO = #{userNo}
	</update>
	
	<select id="getidFind" parameterType="UserDTO"
	resultType="string"> 
	
	SELECT
	EMAIL
	FROM USER_INFO
	WHERE NAME=#{name} AND USERTEL=#{userTel}
	
	</select>
	
	<insert id="insertUserRegSns" parameterType="UserDTO">
	
	INSERT INTO USER_INFO
	(
	NAME,
	EMAIL
	)
	VALUE
	(
	#{name},
	#{email}
	)
	
	</insert>
	
	<select id="getFindUserNo" parameterType="UserDTO">
	
	SELECT 
	NAME,
	EMAIL
	FROM USER_INFO
	WHERE NAME=#{name} AND EMAIL=#{email}
	
	</select>
</mapper>